name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: private

      - name: Build Docker Image
        run: |
          docker-compose build

      - name: Tag Docker Image
        run: |
          docker tag deboraferrarids2/challenge_web:latest 778862303728.dkr.ecr.us-east-1.amazonaws.com/apieventos:latest

      - name: Push Docker Image to ECR
        run: |
          docker push 778862303728.dkr.ecr.us-east-1.amazonaws.com/apieventos:latest

      - name: Download current task definition
        run: |
          aws ecs describe-task-definition --task-definition apieventos --query taskDefinition > task-definition.json

      - name: Fill in new image ID in task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: app
          image: 778862303728.dkr.ecr.us-east-1.amazonaws.com/apieventos:latest

  deploy:
    runs-on: ubuntu-latest  
    needs: build  

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1 
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: events
          cluster: events-cluster-ec2
